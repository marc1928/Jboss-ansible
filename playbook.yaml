---
- name: Ansible Playbook for JBoss Domain Mode (WildFly 24) Management
  hosts: jboss1
  vars_files:
    - connection.yaml
    - vars.yaml

  tasks:
    - name: Creating a server group
      shell: |
        {{ script_path }} --connect --controller={{ ip }}:{{ port }} --user={{ user }} --password={{ password }} \
        --commands="/server-group={{ sg_name }}:add(profile={{ profile }},socket-binding-group=full-sockets)"
      tags: sgroup,creation

    - name: Create server(instance) dans le server group créé et démarrage du server
      shell: |
        {{ script_path }} --connect --controller={{ ip }}:{{ port }} --user={{ user }} --password={{ password }} \
        --commands="/host={{ host }}/server-config={{ server }}:add(group={{ sg_name }},socket-binding-default-interface=public,socket-binding-port-offset={{ offset }}),\
        /host={{ host }}/server-config={{ server }}:start"
      tags: server,creation
    
    - name: Wait until the server is running
      pause:
        seconds: 15
      tags: attente    
    
    - name: deploy a .war application to the group server
      shell: |
        {{ script_path }} --connect --controller={{ ip }}:{{ port }} --user={{ user }} --password={{ password }} \
        --commands="deploy --name={{ war_name }} --server-groups={{ sg_name }}"
      tags: deploy,app

    - name: Set JVM heap size and max
      shell: >
        {{ script_path }} --connect --controller={{ ip }}:{{ port }} --user={{ user }} --password={{ password }}
        --commands="/host={{ host }}/jvm={{ jvm_name }}:write-attribute(name=heap-size,value={{ heap_size }})"
      tags: jvm,heap-siez

    - name: Set JVM max heap size
      shell: >
        {{ script_path }} --connect --controller={{ ip }}:{{ port }} --user={{ user }} --password={{ password }}
        --commands="/host={{ host }}/jvm={{ jvm_name }}:write-attribute(name=max-heap-size,value={{ max_heap_size }})"
      notify: restart server
      tags: jvm,max-heap-size


  handlers:
    - name: restart server
      shell: |
        {{ script_path }} --connect --controller={{ ip }}:{{ port }} --user={{ user }} --password={{ password }} \     
        --commands="/host={{ host }}/server-config={{ server }}:restart"

